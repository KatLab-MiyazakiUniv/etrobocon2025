# Makefile for the Camera Server for Debian/arm64

# Compiler
CXX := g++

# Directories
SRCDIR := src
OBJDIR := obj
INCLUDEDIR := include
TARGET_DIR := bin
TARGET := $(TARGET_DIR)/camera_server

# Compiler and Linker Flags
# Use -pthread for multi-threading if needed in the future
CXXFLAGS := -std=c++17 -Wall -Wextra -O2 -pthread

# Use pkg-config to get OpenCV flags, which is standard on Linux
OPENCV_CFLAGS := $(shell pkg-config --cflags opencv4)
OPENCV_LIBS := $(shell pkg-config --libs opencv4)

INCLUDES := $(shell find $(INCLUDEDIR) -type d -printf '-I%p ') -I../common
CXXFLAGS += $(OPENCV_CFLAGS)
LIBS := $(OPENCV_LIBS)

# --- Build Rules ---

# Find all .cpp files
SOURCES := $(wildcard $(SRCDIR)/*.cpp) $(wildcard $(SRCDIR)/*/*.cpp) $(wildcard $(SRCDIR)/*/*/*.cpp) $(wildcard ../common/*.cpp)
OBJECTS := $(patsubst $(SRCDIR)/%.cpp,$(OBJDIR)/%.o,$(SOURCES))

# Default target
all: $(TARGET)

# Rule to link the executable
$(TARGET): $(OBJECTS)
	@mkdir -p $(TARGET_DIR)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LIBS)

# Rule to compile source files into object files
$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

# Clean rule
clean:
	rm -rf $(OBJDIR) $(TARGET_DIR)

.PHONY: all clean
